// Free usage license, author: Chung-Shu Chen 陳鍾樞
// dot -Tpng asmDfdEx3.gv -oasmDfdEx3.png

digraph G {
  rankdir=LR;
  subgraph cluster_2 {
    style=filled;
//    label = "Data flow in and between MatchAndEmitInstruction() and encodeInstruction(), for instance: add $v1, $v0, $at";
    subgraph clusterA {
      label = "MatchAndEmitInstruction()";
      node [style=filled,color=white]; convertToMCInst [label="convertToMCInst()"];
    }
    subgraph clusterB {
      label = "encodeInstruction()";
      node [style=filled,color=white]; getBinaryCodeForInstr [label="getBinaryCodeForInstr()"];
      node [style=filled,color=white]; EmitInstruction [label="EmitInstruction()"];
      getBinaryCodeForInstr -> EmitInstruction [ label = "Binary" ];
    }
    convertToMCInst -> getBinaryCodeForInstr [ label = "Inst.Opcode = ADD,\nInst.Operand[0] = V1,\nInst.Operand[1] = AT,\nInst.Operand[2] = V0" ];
    color=lightgrey
  }
}
