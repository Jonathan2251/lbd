digraph "isel input for _Z10call_sum_iv:" {
	rankdir="BT";
//	label="Figure Outgoing arguments DAG (B) created by LowerCall() for ch9_outgoing.cpp with -cpu0-s32-calls=true";
	Node0x102f0d060 [shape=record,shape=Mrecord,label="{EntryToken|t0|{<d0>ch}}"];
	Node0x10304f270 [shape=record,shape=Mrecord,label="{Constant\<1\>|t2|{<d0>i32}}"];
	Node0x10304f2e0 [shape=record,shape=Mrecord,label="{TargetConstant\<8\>|t3|{<d0>i32}}"];
	Node0x10304f350 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|callseq_start|t4|{<d0>ch|<d1>glue}}"];
	Node0x10304f350:s0 -> Node0x102f0d060:d0[color=blue,style=dashed];
	Node0x10304f350:s1 -> Node0x10304f2e0:d0;
	Node0x10304f3c0 [shape=record,shape=Mrecord,label="{Register %SP|t5|{<d0>i32}}"];
	Node0x10304f430 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t6|{<d0>i32|<d1>ch}}"];
	Node0x10304f430:s0 -> Node0x10304f350:d0[color=blue,style=dashed];
	Node0x10304f430:s1 -> Node0x10304f3c0:d0;
	Node0x10304f510 [shape=record,shape=Mrecord,label="{undef|t8|{<d0>i32}}"];
	Node0x10304f580 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3}|store\<ST4[\<unknown\>]\>|t9|{<d0>ch}}"];
	Node0x10304f580:s0 -> Node0x10304f350:d0[color=blue,style=dashed];
	Node0x10304f580:s1 -> Node0x10304f270:d0;
	Node0x10304f580:s2 -> Node0x10304f430:d0;
	Node0x10304f580:s3 -> Node0x10304f510:d0;
	Node0x10304f5f0 [shape=record,shape=Mrecord,label="{TargetGlobalAddress\<i32 (i32)* @_Z5sum_ii\> 0|t10|{<d0>i32}}"];
	Node0x10304f660 [shape=record,shape=Mrecord,label="{RegisterMask|t11|{<d0>Untyped}}"];
	Node0x10304f6d0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|Cpu0ISD::JmpLink|t12|{<d0>ch|<d1>glue}}"];
	Node0x10304f6d0:s0 -> Node0x10304f580:d0[color=blue,style=dashed];
	Node0x10304f6d0:s1 -> Node0x10304f5f0:d0;
	Node0x10304f6d0:s2 -> Node0x10304f660:d0;
	Node0x10304f740 [shape=record,shape=Mrecord,label="{TargetConstant\<0\>|t13|{<d0>i32}}"];
	Node0x10304f7b0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3}|callseq_end|t14|{<d0>ch|<d1>glue}}"];
	Node0x10304f7b0:s0 -> Node0x10304f6d0:d0[color=blue,style=dashed];
	Node0x10304f7b0:s1 -> Node0x10304f2e0:d0;
	Node0x10304f7b0:s2 -> Node0x10304f740:d0;
	Node0x10304f7b0:s3 -> Node0x10304f6d0:d1[color=red,style=bold];
	
    NodeComment1 [ penwidth = 1, fontname = "Courier New", shape = "note", label =<<table border="0" cellborder="0" cellpadding="3" bgcolor="gray">
      <tr><td align="left">// Transform all store nodes into one single node because all store</td></tr>
      <tr><td align="left" port="f1">// nodes are independent of each other.</td></tr>
      <tr><td align="left" port="f2">if (!MemOpChains.empty())</td></tr>
      <tr><td align="left" port="f3">  Chain = DAG.getNode(ISD::TokenFactor, DL, MVT::Other, MemOpChains);</td></tr>
      <tr><td align="left">  ...</td></tr>
      </table>> ];
      
    NodeComment2 [ penwidth = 1, fontname = "Courier New", shape = "note", label =<<table border="0" cellborder="0" cellpadding="3" bgcolor="gray">
      <tr><td align="left">if (!IsPIC) // static</td></tr>
      <tr><td align="left" port="f1">  Callee = DAG.getTargetExternalSymbol(Sym,</td></tr>
      <tr><td align="left" port="f2">                                       getPointerTy(DAG.getDataLayout()),</td></tr>
      <tr><td align="left" port="f3">                                       Cpu0II::MO_NO_FLAG);</td></tr>
      <tr><td align="left">  ...</td></tr>
      </table>> ];
      
    Node0x10304f580 -> NodeComment1[color=black,style=dashed];
    NodeComment2:n -> Node0x10304f6d0:e[color=black,style=dashed];
}
