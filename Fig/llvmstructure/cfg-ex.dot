digraph "CFG for '_Z6cfg_exiii' function" {
	label="CFG for '_Z6cfg_exiii' function";

	Node0x600001b56240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{entry:\l  %cmp.not23 = icmp slt i32 %n, 0\l  br i1 %cmp.not23, label %cleanup, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x600001b56240:s0 -> Node0x600001b56280;
	Node0x600001b56240:s1 -> Node0x600001b562c0;
	Node0x600001b56300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.cond:                                         \l  %inc = add nuw i32 %i.026, 1\l  %exitcond.not = icmp eq i32 %i.026, %n\l  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x600001b56300:s0 -> Node0x600001b56280;
	Node0x600001b56300:s1 -> Node0x600001b562c0;
	Node0x600001b562c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body:                                         \l  %i.026 = phi i32 [ %inc, %for.cond ], [ 0, %entry ]\l  %a.addr.025 = phi i32 [ %a.addr.1, %for.cond ], [ %a, %entry ]\l  %b.addr.024 = phi i32 [ %b.addr.1, %for.cond ], [ %b, %entry ]\l  %cmp1 = icmp slt i32 %a.addr.025, %b.addr.024\l  %sub = sext i1 %cmp1 to i32\l  %b.addr.1 = add nsw i32 %b.addr.024, %sub\l  %add = select i1 %cmp1, i32 %i.026, i32 0\l  %a.addr.1 = add nsw i32 %add, %a.addr.025\l  %cmp2 = icmp eq i32 %b.addr.1, 0\l  br i1 %cmp2, label %cleanup, label %for.cond\l|{<s0>T|<s1>F}}"];
	Node0x600001b562c0:s0 -> Node0x600001b56280;
	Node0x600001b562c0:s1 -> Node0x600001b56300;
	Node0x600001b56280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{cleanup:                                          \l  %b.addr.2 = phi i32 [ %b, %entry ], [ 0, %for.body ], [ %b.addr.1, %for.cond\l... ]\l  %a.addr.2 = phi i32 [ %a, %entry ], [ %a.addr.1, %for.body ], [ %a.addr.1,\l... %for.cond ]\l  %cond = icmp eq i32 %a.addr.2, 10\l  %inc7 = sub i32 103, %b.addr.2\l  %spec.select = select i1 %cond, i32 %inc7, i32 %a.addr.2\l  %add8 = add nsw i32 %spec.select, %b.addr.2\l  ret i32 %add8\l}"];
}
