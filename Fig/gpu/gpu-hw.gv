digraph GPU {
  rankdir=LR;
  bgcolor="white";
  node [shape=record, fontname="Helvetica", fontsize=10];

  /* Top-level GPU container */
  subgraph cluster_gpu {
    label = "Massively Parallel Processor (GPU)";
    style = rounded;
    color = black;
    fontsize=12;

    /* Compute cluster: many SMs/CUs */
    subgraph cluster_compute {
      label = "Compute Cluster (many SMs / CUs)";
      style = filled;
      fillcolor = "#f7fbff";
      color = "#c6dbef";

      SMs [label=<
        <TABLE BORDER="0" CELLBORDER="0" CELLSPACING="6">
          <TR><TD><B>SM 0..N-1</B></TD></TR>
          <TR><TD>
            <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
              <TR><TD><FONT POINT-SIZE="10"><B>Scheduler / Warp/Wavefront</B></FONT></TD></TR>
              <TR><TD><FONT POINT-SIZE="10">Registers</FONT></TD></TR>
              <TR><TD><FONT POINT-SIZE="10">Shared Memory / L1</FONT></TD></TR>
              <TR><TD><FONT POINT-SIZE="10">ALUs (FP/INT)</FONT></TD></TR>
              <TR><TD><FONT POINT-SIZE="10">SFUs (transcendental)</FONT></TD></TR>
              <TR><TD><FONT POINT-SIZE="10">Load/Store Units</FONT></TD></TR>
              <TR><TD><FONT POINT-SIZE="10">RegLess Staging Operands (RSO)</FONT></TD></TR>
            </TABLE>
          </TD></TR>
        </TABLE>
      >, shape=plaintext];
    }

    /* Specialized units */
    subgraph cluster_special {
      label = "Specialized Units";
      style = filled;
      fillcolor = "#fff7f3";
      color = "#fcbba1";

      TMU  [label="Texture Mapping Units (TMUs)\n(sampling & filtering)"];
      ROP  [label="Render Output Units (ROPs)\n(blend/depth/stencil)"];
      Tensor [label="Tensor / Matrix Cores\n(AI accel)"];
      RT     [label="Ray-Tracing Cores\n(BVH traversal, intersections)"];
      Video  [label="Video Encode / Decode Engines\n(NVENC / VCN / VPU)"];
      Display [label="Display Controller\n(HDMI / DP)"];
    }

    /* Memory subsystem */
    subgraph cluster_mem {
      label = "Memory Subsystem";
      style = filled;
      fillcolor = "#f7fff7";
      color = "#c7e9c0";

      L1  [label="L1 / Shared Memory (per SM)"];
      L2  [label="L2 Cache (shared)"];
      VRAM [shape=plaintext, label="VRAM (GDDR / HBM)\n(high bandwidth)"];
      Interconnect [label="Memory Controller / Interconnect"];

      Coalescing [label="Memory Coalescing\n(merge warp memory requests)"];
      GatherScatter [label="Gatherâ€“Scatter\n(irregular memory access)"];
    }

    /* Layout helper node */
    Bus [label="Internal Interconnect / NoC", shape=note];

    /* Arrange invis edges for clusters */
    SMs -> Bus [style=invis];
    TMU -> Bus [style=invis];
    Tensor -> Bus [style=invis];
    RT -> Bus [style=invis];
    ROP -> Bus [style=invis];
    Video -> Bus [style=invis];
    Display -> Bus [style=invis];
    L1 -> Bus [style=invis];
    L2 -> Bus [style=invis];
    VRAM -> Bus [style=invis];
    Interconnect -> Bus [style=invis];
    Coalescing -> Bus [style=invis];
    GatherScatter -> Bus [style=invis];
  }

  /* Connections between major blocks */
  SMs -> L1 [label=" fast access", fontsize=9];
  SMs -> TMU [label=" texture fetch", fontsize=9];
  SMs -> Tensor [label=" dispatch heavy-math", fontsize=9];
  SMs -> RT [label=" ray queries (when used)", fontsize=9, style=dashed];
  TMU  -> L2 [label=" read textures", fontsize=9];
  SMs -> L2 [label=" loads/stores", fontsize=9];
  L2   -> VRAM [label=" miss -> VRAM", fontsize=9];
  Interconnect -> VRAM [label=" memory transactions", fontsize=9];
  SMs -> ROP [label=" shaded fragments -> ROP", fontsize=9];
  ROP  -> VRAM [label=" write framebuffer", fontsize=9];
  Video -> VRAM [label=" read/write video frames", fontsize=9];
  Display -> VRAM [label=" scanout", fontsize=9];

  /* Memory behavior connections */
  SMs -> Coalescing [label=" warp memory requests", fontsize=9];
  Coalescing -> L2 [label=" optimized memory transaction", fontsize=9];
  SMs -> GatherScatter [label=" irregular access", fontsize=9, style=dashed];
  GatherScatter -> L2 [label=" multiple transactions", fontsize=9, style=dashed];

  /* Styling */
  edge [color="#444444"];
}
