digraph RasterizationPipeline {
    rankdir=TB;
    node [shape=box, style=filled, fillcolor=lightgray];

    FragmentShader [label="Fragment Shader (Pixel Shader)", fillcolor=lightblue];
    GeometryUnit [label="Geometry Unit\n(Vertex + Geometry Shader)", fillcolor=lightyellow];
    GeometryUnit -> PreparedPrimitives;
    PreparedPrimitives [label="Prepared Primitives", shape=ellipse, fillcolor=white];

    PreparedPrimitives -> TriangleSetup;
    TriangleSetup -> ScanConversion;
    ScanConversion -> AttributeInterpolation;
    AttributeInterpolation -> EarlyZCulling;
    EarlyZCulling -> FragmentGeneration;
    FragmentGeneration -> FragmentShader;

    // === Layering for better spacing ===
    { rank = same; GeometryUnit; PreparedPrimitives; TriangleSetup }
    { rank = same; ScanConversion; AttributeInterpolation; EarlyZCulling }
    { rank = same; FragmentGeneration; FragmentShader }
}
